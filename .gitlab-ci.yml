image: mxe-docker-image-win64

variables:
  GIT_DEPTH: "1"

before_script:
  - echo "${SSH_PRIVATE_KEY}" 
  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client expect -y )'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
#  - ssh-add -h
  # echo "-----BEGIN RSA PRIVATE KEY-----" > key.keys
  - echo "$SSH_PRIVATE_KEY" >> key.keys
  # echo "-----END RSA PRIVATE KEY-----"  >> key.keys
  - chmod og-xrw key.keys

  - ssh-add key.keys


  #- ssh-add key.txt
  - rm key.keys


  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'


build:
  stage: build
  script:
    - apt-get -qq update
    - apt-get -y install build-essential cmake libeigen3-dev libboost-all-dev libgflags-dev git ninja
    - cd "$CI_PROJECT_DIR"
    - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
    - git submodule sync
    - git submodule update --init --recursive  
    - mkdir build
    - cd build
    - cmake ../ -DSPC_ENABLE_INSTALL=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="/installed" -DSPC_BUILD_SHARED=ON 
    - make install
    
